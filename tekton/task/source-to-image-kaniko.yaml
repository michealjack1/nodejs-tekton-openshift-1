apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: source-to-image-kaniko
spec:
  inputs:
    resources:
      - name: git-source
        type: git
    params:
      - name: pathToContext
        description: The path to the build context, used by Kaniko - within the workspace
        default: .
      - name: pathToDockerFile
        description: The path to the dockerfile to build (relative to the context)
        default: Dockerfile
      - name: imageUrl
        description: Url of image repository
      - name: imageTag
        description: Tag to apply to the built image
  steps:
    - name: npm-install
      image: node
      command:
        - /bin/sh
        - -c
      args:
        - npm install
      workingDir: /workspace/git-source/
    # - name: npm-audit
    #   image: node
    #   command:
    #     - /bin/sh
    #     - -c
    #   args:
    #     - npm audit fix
    #   workingDir: /workspace/git-source/
    # - name: lint
    #   image: node
    #   command:
    #     - /bin/sh
    #     - -c
    #   args:
    #     - ./node_modules/eslint/bin/eslint.js app.js
    #   workingDir: /workspace/git-source/
    - name: test
      image: node
      command:
        - /bin/sh
        - -c
      args:
        - npm test
      workingDir: /workspace/git-source/
    - name: build-and-push
      image: gcr.io/kaniko-project/executor:v0.17.1
      securityContext:
        runAsUser: 0
      volumeMounts:
        - name: docker-config
          mountPath: /kaniko/.docker
      env:
        - name: "DOCKER_CONFIG"
          value: "/builder/home/.docker"
      command:
        - /kaniko/executor
      args:
        - --dockerfile=$(inputs.params.pathToDockerFile)
        - --destination=$(inputs.params.imageUrl):$(inputs.params.imageTag)
        - --context=/workspace/git-source/$(inputs.params.pathToContext)
        - --skip-tls-verify
  volumes:
    - name: docker-config
      configMap: 
        name: docker-config
